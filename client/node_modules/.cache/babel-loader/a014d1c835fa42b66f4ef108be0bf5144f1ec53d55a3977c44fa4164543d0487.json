{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\PhoenixBus\\\\SecondApp\\\\client\\\\src\\\\utils\\\\private_routes.js\";\nimport { Outlet, Navigate } from \"react-router-dom\";\nimport { useCookies } from \"react-cookie\";\n//import { Jwt } from \"jsonwebtoken\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminRoutes = () => {\n  //const [cookies] = useCookies(null);\n\n  let auth = {\n    token: true\n  };\n  return auth.token ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 23\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 36\n  }, this);\n\n  // //if there is an user logged in\n  // let auth = cookies.Username ? true : false;\n  // if (auth) {\n  //   //decode the token\n  //   const decoded = Jwt.verify(cookies.AuthToken, \"statesecret\");\n  //   //if user is admin it navigate to the route requested. If not navigate to the login page\n  //   return decoded.userType === \"admin\" ? <Outlet /> : <Navigate to=\"/login\" />;\n  // }\n};\n_c = AdminRoutes;\nexport default AdminRoutes;\nvar _c;\n$RefreshReg$(_c, \"AdminRoutes\");","map":{"version":3,"names":["Outlet","Navigate","useCookies","jsxDEV","_jsxDEV","AdminRoutes","auth","token","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Projects/PhoenixBus/SecondApp/client/src/utils/private_routes.js"],"sourcesContent":["import { Outlet, Navigate } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\n//import { Jwt } from \"jsonwebtoken\";\r\n\r\nconst AdminRoutes = () => {\r\n  //const [cookies] = useCookies(null);\r\n\r\n  let auth = { token: true };\r\n  return auth.token ? <Outlet /> : <Navigate to=\"/login\" />;\r\n\r\n  // //if there is an user logged in\r\n  // let auth = cookies.Username ? true : false;\r\n  // if (auth) {\r\n  //   //decode the token\r\n  //   const decoded = Jwt.verify(cookies.AuthToken, \"statesecret\");\r\n  //   //if user is admin it navigate to the route requested. If not navigate to the login page\r\n  //   return decoded.userType === \"admin\" ? <Outlet /> : <Navigate to=\"/login\" />;\r\n  // }\r\n};\r\n\r\nexport default AdminRoutes;\r\n"],"mappings":";AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AACnD,SAASC,UAAU,QAAQ,cAAc;AACzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB;;EAEA,IAAIC,IAAI,GAAG;IAAEC,KAAK,EAAE;EAAK,CAAC;EAC1B,OAAOD,IAAI,CAACC,KAAK,gBAAGH,OAAA,CAACJ,MAAM;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGP,OAAA,CAACH,QAAQ;IAACW,EAAE,EAAC;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;;EAEzD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;AAACE,EAAA,GAdIR,WAAW;AAgBjB,eAAeA,WAAW;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}