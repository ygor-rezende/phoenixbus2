{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\PhoenixBus\\\\SecondApp\\\\client\\\\src\\\\pages\\\\addvehicle.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Alert, AlertTitle, TextField, Autocomplete, InputAdornment, IconButton, Button, Snackbar } from \"@mui/material\";\nimport { MuiColorInput } from \"mui-color-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddVehicle = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [vehicleColor, setVehicleColor] = useState(\"#ffffff\");\n  const [vehicleModel, setVehicleModel] = useState(\"\");\n  const [vehicleName, setVehicleName] = useState(\"\");\n  const [vehicleYear, setVehicleYear] = useState(null);\n  const [openSnakbar, setOpenSnakbar] = useState(false);\n  const yearList = () => {\n    let max = new Date().getFullYear();\n    let min = 1950;\n    let years = [];\n    for (let i = max; i >= min; i--) years.push(i);\n    return years;\n  };\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnakbar(false);\n  };\n  const handleSubmit = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vehicle-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"vehicleName\",\n        required: true,\n        label: \"Vehicle Name\",\n        type: \"text\",\n        placeholder: \"Vehicle Name\",\n        value: vehicleName,\n        onChange: e => setVehicleName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"vehicleModel\",\n        required: true,\n        label: \"Model\",\n        type: \"text\",\n        placeholder: \"Model\",\n        value: vehicleModel,\n        onChange: e => setVehicleModel(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        id: \"year-options\",\n        value: vehicleYear,\n        onChange: (e, newValue) => setVehicleYear(newValue),\n        options: yearList(),\n        getOptionLabel: option => option,\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n          ...params,\n          label: \"Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MuiColorInput, {\n        id: \"vehicleColor\",\n        label: \"Color\",\n        value: vehicleColor,\n        onChange: color => setVehicleColor(color),\n        isAlphaHidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(AddVehicle, \"jP5Xv+tcWyVpSqyv4Tdc2Jm6SIg=\");\n_c = AddVehicle;\nexport default AddVehicle;\nvar _c;\n$RefreshReg$(_c, \"AddVehicle\");","map":{"version":3,"names":["useState","Alert","AlertTitle","TextField","Autocomplete","InputAdornment","IconButton","Button","Snackbar","MuiColorInput","jsxDEV","_jsxDEV","AddVehicle","_s","error","setError","success","setSuccess","vehicleColor","setVehicleColor","vehicleModel","setVehicleModel","vehicleName","setVehicleName","vehicleYear","setVehicleYear","openSnakbar","setOpenSnakbar","yearList","max","Date","getFullYear","min","years","i","push","handleClose","event","reason","handleSubmit","className","children","onSubmit","id","required","label","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","newValue","options","getOptionLabel","option","renderInput","params","color","isAlphaHidden","_c","$RefreshReg$"],"sources":["C:/Projects/PhoenixBus/SecondApp/client/src/pages/addvehicle.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport {\r\n  Alert,\r\n  AlertTitle,\r\n  TextField,\r\n  Autocomplete,\r\n  InputAdornment,\r\n  IconButton,\r\n  Button,\r\n  Snackbar,\r\n} from \"@mui/material\";\r\nimport { MuiColorInput } from \"mui-color-input\";\r\n\r\nconst AddVehicle = () => {\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n  const [vehicleColor, setVehicleColor] = useState(\"#ffffff\");\r\n  const [vehicleModel, setVehicleModel] = useState(\"\");\r\n  const [vehicleName, setVehicleName] = useState(\"\");\r\n  const [vehicleYear, setVehicleYear] = useState(null);\r\n  const [openSnakbar, setOpenSnakbar] = useState(false);\r\n\r\n  const yearList = () => {\r\n    let max = new Date().getFullYear();\r\n    let min = 1950;\r\n    let years = [];\r\n    for (let i = max; i >= min; i--) years.push(i);\r\n    return years;\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenSnakbar(false);\r\n  };\r\n\r\n  const handleSubmit = () => {};\r\n\r\n  return (\r\n    <div className=\"vehicle-container\">\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          id=\"vehicleName\"\r\n          required\r\n          label=\"Vehicle Name\"\r\n          type=\"text\"\r\n          placeholder=\"Vehicle Name\"\r\n          value={vehicleName}\r\n          onChange={(e) => setVehicleName(e.target.value)}\r\n        />\r\n        <p></p>\r\n        <TextField\r\n          id=\"vehicleModel\"\r\n          required\r\n          label=\"Model\"\r\n          type=\"text\"\r\n          placeholder=\"Model\"\r\n          value={vehicleModel}\r\n          onChange={(e) => setVehicleModel(e.target.value)}\r\n        />\r\n        <p></p>\r\n        <Autocomplete\r\n          id=\"year-options\"\r\n          value={vehicleYear}\r\n          onChange={(e, newValue) => setVehicleYear(newValue)}\r\n          options={yearList()}\r\n          getOptionLabel={(option) => option}\r\n          renderInput={(params) => <TextField {...params} label=\"Year\" />}\r\n        />\r\n        <p></p>\r\n        <MuiColorInput\r\n          id=\"vehicleColor\"\r\n          label=\"Color\"\r\n          value={vehicleColor}\r\n          onChange={(color) => setVehicleColor(color)}\r\n          isAlphaHidden\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddVehicle;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}