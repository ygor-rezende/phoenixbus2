[{"C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\index.js":"1","C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\App.jsx":"2","C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\theme.js":"3","C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\error-page.jsx":"4","C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\utils\\private_routes.js":"5","C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\pages\\driverpayroll.jsx":"6","C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\pages\\home.jsx":"7","C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\pages\\addvehicle.jsx":"8","C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\pages\\driverPage.jsx":"9","C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\pages\\addclient.jsx":"10","C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\pages\\resetPassword.jsx":"11","C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\pages\\schedule.jsx":"12","C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\pages\\login.jsx":"13","C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\pages\\admin\\Auth.jsx":"14","C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\pages\\admin\\ResetUserPassword.jsx":"15","C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\utils\\generictable.jsx":"16","C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\pages\\admin\\deleteUser.jsx":"17"},{"size":254,"mtime":1692747608142,"results":"18","hashOfConfig":"19"},{"size":11387,"mtime":1695307696678,"results":"20","hashOfConfig":"19"},{"size":189,"mtime":1678567697786,"results":"21","hashOfConfig":"19"},{"size":230,"mtime":1693664314827,"results":"22","hashOfConfig":"19"},{"size":1960,"mtime":1693666398620,"results":"23","hashOfConfig":"19"},{"size":107,"mtime":1688412274142,"results":"24","hashOfConfig":"19"},{"size":318,"mtime":1691366137048,"results":"25","hashOfConfig":"19"},{"size":4775,"mtime":1694102940910,"results":"26","hashOfConfig":"19"},{"size":127,"mtime":1693665946548,"results":"27","hashOfConfig":"19"},{"size":109,"mtime":1688412147223,"results":"28","hashOfConfig":"19"},{"size":4687,"mtime":1692831436643,"results":"29","hashOfConfig":"19"},{"size":103,"mtime":1688412181602,"results":"30","hashOfConfig":"19"},{"size":3462,"mtime":1693436426889,"results":"31","hashOfConfig":"19"},{"size":5218,"mtime":1692831283648,"results":"32","hashOfConfig":"19"},{"size":4661,"mtime":1695306862099,"results":"33","hashOfConfig":"19"},{"size":19381,"mtime":1694296848223,"results":"34","hashOfConfig":"19"},{"size":3686,"mtime":1695312913538,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"a9o1h",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"39"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\index.js",[],[],[],"C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\App.jsx",["91"],["92","93","94","95"],"C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\theme.js",[],[],"C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\error-page.jsx",[],[],"C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\utils\\private_routes.js",[],[],"C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\pages\\driverpayroll.jsx",[],[],"C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\pages\\home.jsx",[],[],"C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\pages\\addvehicle.jsx",["96"],[],"import { useState } from \"react\";\r\nimport {\r\n  Alert,\r\n  AlertTitle,\r\n  TextField,\r\n  Autocomplete,\r\n  Button,\r\n  Snackbar,\r\n  Divider,\r\n} from \"@mui/material\";\r\nimport { MuiColorInput } from \"mui-color-input\";\r\nimport EnhancedTable from \"../utils/generictable\";\r\n\r\nconst AddVehicle = () => {\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [vehicleColor, setVehicleColor] = useState(\"#ffffff\");\r\n  const [vehicleModel, setVehicleModel] = useState(\"\");\r\n  const [vehicleName, setVehicleName] = useState(\"\");\r\n  const [vehicleYear, setVehicleYear] = useState(null);\r\n  const [openSnakbar, setOpenSnakbar] = useState(false);\r\n\r\n  const yearList = () => {\r\n    let max = new Date().getFullYear();\r\n    let min = 1950;\r\n    let years = [];\r\n    for (let i = max; i >= min; i--) years.push(i);\r\n    return years;\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenSnakbar(false);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    if (vehicleYear === null) {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n    const response = await fetch(\r\n      `${process.env.REACT_APP_SERVERURL}/createvehicle`,\r\n      {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          vehicleName: vehicleName,\r\n          vehicleModel: vehicleModel,\r\n          vehicleYear: vehicleYear,\r\n          vehicleColor: vehicleColor,\r\n        }),\r\n      }\r\n    );\r\n\r\n    const data = await response.json();\r\n    //if an error happens when signing up set the error\r\n    if (data.detail) {\r\n      setSuccess(false);\r\n      setError(data.detail);\r\n      setOpenSnakbar(true);\r\n    } else {\r\n      //if no error set success to display message\r\n      setMsg(data);\r\n      setError(null);\r\n      setSuccess(true);\r\n      setOpenSnakbar(true);\r\n    }\r\n  };\r\n\r\n  const headings = [\"Vehicle Name\", \"Model\", \"Year\", \"Color\"];\r\n\r\n  return (\r\n    <div className=\"vehicle-container\">\r\n      <div className=\"vehicle-container-box\">\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField\r\n            id=\"vehicleName\"\r\n            required\r\n            label=\"Vehicle Name\"\r\n            type=\"text\"\r\n            placeholder=\"Vehicle Name\"\r\n            value={vehicleName}\r\n            onChange={(e) => setVehicleName(e.target.value)}\r\n          />\r\n          <p></p>\r\n          <TextField\r\n            id=\"vehicleModel\"\r\n            required\r\n            label=\"Model\"\r\n            type=\"text\"\r\n            placeholder=\"Model\"\r\n            value={vehicleModel}\r\n            onChange={(e) => setVehicleModel(e.target.value)}\r\n          />\r\n          <p></p>\r\n          <div\r\n            id=\"vehicle-year-box\"\r\n            style={{ justifyContent: \"center\", display: \"flex\" }}\r\n          >\r\n            <Autocomplete\r\n              id=\"year-options\"\r\n              required\r\n              value={vehicleYear}\r\n              onChange={(e, newValue) => setVehicleYear(newValue)}\r\n              options={yearList()}\r\n              sx={{ width: 200 }}\r\n              getOptionLabel={(option) => option.toString()}\r\n              renderInput={(params) => (\r\n                <TextField required {...params} label=\"Year\" />\r\n              )}\r\n            />\r\n          </div>\r\n          <p></p>\r\n          <MuiColorInput\r\n            id=\"vehicleColor\"\r\n            label=\"Color\"\r\n            value={vehicleColor}\r\n            onChange={(color) => setVehicleColor(color)}\r\n            isAlphaHidden\r\n          />\r\n          <p></p>\r\n          <Button\r\n            variant=\"outlined\"\r\n            type=\"submit\"\r\n            style={{\r\n              backgroundColor: \"rgb(255,255,255)\",\r\n            }}\r\n          >\r\n            Save\r\n          </Button>\r\n          <p></p>\r\n          <Snackbar\r\n            open={error && openSnakbar}\r\n            autoHideDuration={5000}\r\n            onClose={handleClose}\r\n          >\r\n            <Alert severity=\"error\" onClose={handleClose}>\r\n              <AlertTitle>Error</AlertTitle>\r\n              {error}\r\n            </Alert>\r\n          </Snackbar>\r\n\r\n          <Snackbar\r\n            open={success && openSnakbar}\r\n            autoHideDuration={5000}\r\n            onClose={handleClose}\r\n          >\r\n            <Alert severity=\"success\" onClose={handleClose}>\r\n              <AlertTitle>Vehicle Saved</AlertTitle>\r\n              Vehicle created!\r\n            </Alert>\r\n          </Snackbar>\r\n        </form>\r\n        <p></p>\r\n        <div id=\"table-container\">\r\n          <Divider />\r\n          <p></p>\r\n          <EnhancedTable headings={headings} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddVehicle;\r\n","C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\pages\\driverPage.jsx",[],[],"C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\pages\\addclient.jsx",[],[],"C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\pages\\resetPassword.jsx",["97","98"],[],"import { useState } from \"react\";\r\nimport {\r\n  Alert,\r\n  AlertTitle,\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n  Button,\r\n  Snackbar,\r\n} from \"@mui/material\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nconst ResetPassword = () => {\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showPassword2, setShowPassword2] = useState(false);\r\n  const [currentPassword, setCurrentPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [cookies, setCookie, removeCookie] = useCookies(null);\r\n  const [openSnakbar, setOpenSnakbar] = useState(false);\r\n\r\n  const userName = cookies.Username;\r\n\r\n  //console.log(cookies);\r\n\r\n  const handleReset = async () => {\r\n    const response = await fetch(`${process.env.REACT_APP_SERVERURL}/reset`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        userName: userName,\r\n        currentPassword: currentPassword,\r\n        newPassword: newPassword,\r\n      }),\r\n    });\r\n\r\n    const data = await response.json();\r\n    //if an error happens when signing up set the error\r\n    if (data.detail) {\r\n      setSuccess(false);\r\n      setError(data.detail);\r\n      setOpenSnakbar(true);\r\n    } else {\r\n      //if no error set success to display message\r\n      setError(null);\r\n      setSuccess(true);\r\n      setOpenSnakbar(true);\r\n\r\n      //Clear fields\r\n      setCurrentPassword(\"\");\r\n      setNewPassword(\"\");\r\n      //reload the page\r\n      //window.location.reload();\r\n    }\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenSnakbar(false);\r\n  };\r\n\r\n  const isDisabled = !userName || !currentPassword || !newPassword;\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-container-box\">\r\n        <form>\r\n          <h2>Please enter your current and new password</h2>\r\n          <TextField\r\n            id=\"currentPassword\"\r\n            required\r\n            label=\"Current Password\"\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            placeholder=\"Enter your current password\"\r\n            value={currentPassword}\r\n            onChange={(e) => setCurrentPassword(e.target.value)}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton onClick={() => setShowPassword((show) => !show)}>\r\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n          <p></p>\r\n          <TextField\r\n            id=\"newPassword\"\r\n            required\r\n            label=\"New Password\"\r\n            type={showPassword2 ? \"text\" : \"password\"}\r\n            placeholder=\"Enter your new password\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton onClick={() => setShowPassword2((show) => !show)}>\r\n                    {showPassword2 ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n          <p></p>\r\n\r\n          <Snackbar\r\n            open={error && openSnakbar}\r\n            autoHideDuration={5000}\r\n            onClose={handleClose}\r\n          >\r\n            <Alert severity=\"error\" onClose={handleClose}>\r\n              <AlertTitle>Error</AlertTitle>\r\n              {error}\r\n            </Alert>\r\n          </Snackbar>\r\n\r\n          <Snackbar\r\n            open={success && openSnakbar}\r\n            autoHideDuration={5000}\r\n            onClose={handleClose}\r\n          >\r\n            <Alert severity=\"success\" onClose={handleClose}>\r\n              <AlertTitle>Password updated</AlertTitle>\r\n              Your password was updated with success.\r\n            </Alert>\r\n          </Snackbar>\r\n        </form>\r\n        <p></p>\r\n        <div className=\"auth-options\">\r\n          <Button\r\n            disabled={isDisabled}\r\n            variant=\"outlined\"\r\n            onClick={handleReset}\r\n            style={{\r\n              backgroundColor: \"rgb(255,255,255)\",\r\n            }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\pages\\schedule.jsx",[],[],"C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\pages\\login.jsx",["99","100"],[],"import { useReducer, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button, Snackbar, Alert, AlertTitle } from \"@mui/material\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useReducer(\r\n    (formData, newItem) => {\r\n      return { ...formData, ...newItem };\r\n    },\r\n    { userName: \"\", password: \"\" }\r\n  );\r\n\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [cookies, setCookie, removeCookie] = useCookies(null);\r\n  const [openSnakbar, setOpenSnakbar] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const doLogin = () => {\r\n    try {\r\n      login(formData.userName, formData.password);\r\n    } catch (error) {\r\n      setErrorMessage(\"Incorrect password\");\r\n    }\r\n  };\r\n\r\n  const login = async (userName, password) => {\r\n    //Hit API to pull the username to check the password\r\n    const response = await fetch(\r\n      `${process.env.REACT_APP_SERVERURL}/api/login`,\r\n      {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ userName, password }),\r\n      }\r\n    );\r\n\r\n    const data = await response.json();\r\n    console.log(data);\r\n    //if an error happens when signing up set the error\r\n    if (data.detail) {\r\n      setErrorMessage(data.detail);\r\n      setOpenSnakbar(true);\r\n    } else {\r\n      //if no error set cookies\r\n      setErrorMessage(null);\r\n\r\n      //set a time to expire the cookies\r\n      const date = Date.now();\r\n      const expireDate = new Date(date + 60 * 60 * 1000);\r\n\r\n      //set the cookies\r\n      setCookie(\"Username\", data.username, {\r\n        expires: expireDate,\r\n      });\r\n      console.log(date);\r\n      setCookie(\"AuthToken\", data.token, { expires: expireDate });\r\n      navigate(\"/home\");\r\n      //set props\r\n      //props.user({ name: data.username, type: data.usertype, isAuth: true });\r\n      //reload the page\r\n      //window.location.reload();\r\n    }\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenSnakbar(false);\r\n  };\r\n\r\n  const keyEnterHandler = (e) => {\r\n    if (e.key === \"Enter\") document.getElementById(\"loginButton\").focus();\r\n  };\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <h2>Phoenix Bus - Login</h2>\r\n      <div className=\"inputs\">\r\n        <div className=\"input\">\r\n          <input\r\n            id=\"userName\"\r\n            type=\"text\"\r\n            value={formData.userName}\r\n            onChange={(e) => setFormData({ userName: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"input\">\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            value={formData.password}\r\n            onChange={(e) => setFormData({ password: e.target.value })}\r\n            onKeyDownCapture={keyEnterHandler}\r\n          />\r\n        </div>\r\n        <p></p>\r\n        <div className=\"button\">\r\n          <Button id=\"loginButton\" variant=\"outlined\" onClick={doLogin}>\r\n            Log in\r\n          </Button>\r\n        </div>\r\n        <Snackbar\r\n          open={errorMessage && openSnakbar}\r\n          autoHideDuration={5000}\r\n          onClose={handleClose}\r\n        >\r\n          <Alert severity=\"error\" onClose={handleClose}>\r\n            <AlertTitle>Error</AlertTitle>\r\n            {errorMessage}\r\n          </Alert>\r\n        </Snackbar>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\pages\\admin\\Auth.jsx",[],[],"C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\pages\\admin\\ResetUserPassword.jsx",[],[],"C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\utils\\generictable.jsx",[],[],"C:\\Projects\\PhoenixBus\\SecondApp\\phoenixbus2\\client\\src\\pages\\admin\\deleteUser.jsx",[],[],{"ruleId":"101","severity":1,"message":"102","line":48,"column":19,"nodeType":"103","messageId":"104","endLine":48,"endColumn":28},{"ruleId":"105","severity":2,"message":"106","line":205,"column":32,"nodeType":"103","messageId":"107","endLine":205,"endColumn":36,"suppressions":"108"},{"ruleId":"105","severity":2,"message":"106","line":208,"column":32,"nodeType":"103","messageId":"107","endLine":208,"endColumn":36,"suppressions":"109"},{"ruleId":"105","severity":2,"message":"106","line":260,"column":32,"nodeType":"103","messageId":"107","endLine":260,"endColumn":36,"suppressions":"110"},{"ruleId":"105","severity":2,"message":"106","line":262,"column":32,"nodeType":"103","messageId":"107","endLine":262,"endColumn":36,"suppressions":"111"},{"ruleId":"101","severity":1,"message":"112","line":17,"column":10,"nodeType":"103","messageId":"104","endLine":17,"endColumn":13},{"ruleId":"101","severity":1,"message":"102","line":22,"column":19,"nodeType":"103","messageId":"104","endLine":22,"endColumn":28},{"ruleId":"101","severity":1,"message":"113","line":22,"column":30,"nodeType":"103","messageId":"104","endLine":22,"endColumn":42},{"ruleId":"101","severity":1,"message":"114","line":15,"column":10,"nodeType":"103","messageId":"104","endLine":15,"endColumn":17},{"ruleId":"101","severity":1,"message":"113","line":15,"column":30,"nodeType":"103","messageId":"104","endLine":15,"endColumn":42},"no-unused-vars","'setCookie' is assigned a value but never used.","Identifier","unusedVar","no-restricted-globals","Unexpected use of 'open'.","defaultMessage",["115"],["116","117"],["118"],["119"],"'msg' is assigned a value but never used.","'removeCookie' is assigned a value but never used.","'cookies' is assigned a value but never used.",{"kind":"120","justification":"121"},{"kind":"120","justification":"121"},{"kind":"120","justification":"121"},{"kind":"120","justification":"121"},{"kind":"120","justification":"121"},"directive",""]